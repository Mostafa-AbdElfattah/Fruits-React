{"version":3,"sources":["Components/ListOfOldFruits/ListOfOldFruits.component.jsx","Components/ViewFruits/ViewFruits.component.jsx","Components/CountNumber/CountNumber.component.jsx","Components/GetCount/GetCount.component.jsx","Components/NewFruitList/NewFruitList.component.jsx","Components/AddNewFruit/AddNewFruit.component.jsx","App.js","index.js"],"names":["ListOfOldFruits","fruits","className","map","fruit","key","id","name","ViewFruits","state","showFruits","onClick","setState","this","props","Component","CountNumber","fruitCount","GetCount","showCount","countFunc","searchFruit","type","placeholder","onChange","countSearch","NewFruitList","AddNewFruit","addName","addId","newFruit","App","event","getCount","target","value","addFruitName","newFruitName","addFruitID","newFruitCount","filterFruits","filter","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39d61d80.chunk.js","sourcesContent":["import \"./ListOfOldFruits.style.css\";\nimport React from \"react\";\n\nexport const ListOfOldFruits = ({ fruits }) => (\n  <div className=\"item fruitList\">\n    <div className=\"viewFruitFirstDiv\">\n      <h2 className=\"item_input viewFruitH2\"> Fruit</h2>\n      <ul>\n        {fruits.map((fruit) => (\n          <li className=\"fruitsLi\" key={fruit.id}>\n            {fruit.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n\n    <div className=\"viewFruitSectDiv\">\n      <h2 className=\"item_input viewFruitH2\"> Count</h2>\n      <ul>\n        {fruits.map((fruit) => (\n          <li className=\"fruitsLi\" key={fruit.id}>\n            {fruit.id}\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n","import \"./ViewFruits.style.css\";\nimport React, { Component } from \"react\";\nimport { ListOfOldFruits } from \"../ListOfOldFruits/ListOfOldFruits.component\";\n\nexport class ViewFruits extends Component {\n  state = {\n    showFruits: false,\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h3 className=\"title\">View Fruits List</h3>\n\n        <div id=\"oldContainer\">\n          <div className=\"inputDiv viewClass\">\n            <button\n              onClick={() =>\n                this.setState({ showFruits: !this.state.showFruits })\n              }\n              className=\"genBtnStyle viewBtn\"\n            >\n              {this.state.showFruits ? \"Click To Hide\" : \"Click To View\"}\n            </button>\n          </div>\n        </div>\n\n        <div id=\"newContainer\">\n          {this.state.showFruits && (\n            <ListOfOldFruits fruits={this.props.fruits} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import './CountNumber.style.css';\nimport React from 'react';\n\nexport const CountNumber =({fruitCount})=>(\n\n<h1 className='item fruitList textOfCount'>{fruitCount}</h1>\n\n);","import \"./GetCount.style.css\";\nimport React, { Component } from \"react\";\nimport { CountNumber } from \"../CountNumber/CountNumber.component\";\n\nexport class GetCount extends Component {\n  state = {\n    fruitCount: \"\",\n    showCount: false,\n  };\n\n  countFunc =()=>{\n    this.setState({ showCount: true });\n    if (this.props.searchFruit[0] ){\n      this.setState({ fruitCount: this.props.searchFruit[0].id })\n    } else if (!this.props.searchFruit[0] ){ this.setState({ fruitCount: 'Error' })}\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h3 className=\"title\">Get Fruit Count</h3>\n\n        <div id=\"oldContainer\">\n          <div className=\"inputDiv\">\n            <div className=\"elemnt\">\n              <input\n                type=\"text\"\n                className=\"fruitInput\"\n                placeholder=\"Enter Fruit Name\"\n                onChange={this.props.countSearch}\n              />\n            </div>\n\n            <button\n              onClick={this.countFunc}\n              className=\"genBtnStyle\"\n            >\n              Get Count\n            </button>\n          </div>\n        </div>\n\n        <div id=\"newContainerCount\">\n          \n          {this.state.showCount && (\n            <CountNumber fruitCount={this.state.fruitCount} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import \"./NewFruitList.style.css\";\nimport React from \"react\";\n\nexport const NewFruitList = ({fruits}) => (\n  <div className=\"item fruitList newAdd\">\n    <div className=\"viewFruitFirstDiv\">\n      <h2 className=\"item_input viewFruitH2\"> Fruit</h2>\n      <ul>\n      {fruits.map((fruit) => (\n          <li className=\"fruitsLi\" key={fruit.id}>\n            {fruit.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n\n    <div className=\"viewFruitSectDiv\">\n      <h2 className=\"item_input viewFruitH2\"> Count</h2>\n      <ul>\n      {fruits.map((fruit) => (\n          <li className=\"fruitsLi\" key={fruit.id}>\n            {fruit.id}\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n","import \"./AddNewFruit.style.css\";\nimport React, { Component } from \"react\";\nimport { NewFruitList } from \"../NewFruitList/NewFruitList.component\";\n\nexport class AddNewFruit extends Component {\n  state = {\n    showFruits: false,\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h3 className=\"title\">Add New Fruit</h3>\n\n        <div id=\"oldContainer\">\n          <div className=\"inputDiv\">\n            <div className=\"elemnt\">\n              <input\n                type=\"text\"\n                className=\"fruitInput\"\n                placeholder=\"Enter Fruit\"\n                onChange={this.props.addName}\n              />\n            </div>\n            <div className=\"elemnt\">\n              <input\n                type=\"text\"\n                className=\"fruitInput\"\n                placeholder=\"Enter Count\"\n                onChange={this.props.addId}\n              />\n            </div>\n\n            <button\n              onClick={() => {\n                this.setState({ showFruits: true });\n                this.props.newFruit();\n              }}\n              className=\"genBtnStyle\"\n            >\n              Add\n            </button>\n          </div>\n        </div>\n\n        <div id=\"newContainerAdd\">\n          {this.state.showFruits && <NewFruitList fruits={this.props.fruits} />}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { ViewFruits } from \"./Components/ViewFruits/ViewFruits.component\";\nimport { GetCount } from \"./Components/GetCount/GetCount.component\";\nimport { AddNewFruit } from \"./Components/AddNewFruit/AddNewFruit.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      fruits: [\n        { id: 2, name: \"Oranges\" },\n        { id: 5, name: \"Apples\" },\n        { id: 7, name: \"Cherries\" },\n        { id: 4, name: \"Mangos\" },\n      ],\n      getCount: \"\",\n      newFruitName:\"\" ,\n      newFruitCount : null,\n      newFruit: [],\n    };\n  }\n\n  countSearch = (event) => {\n    this.setState({ getCount: event.target.value });\n  };\n\n  addFruitName = (event) => {\n    this.setState({ newFruitName: { name: event.target.value } });\n  };\n\n  addFruitID = (event) => {\n    this.setState({ newFruitCount: { id: event.target.value } });\n  };\n\n  newFruit =()=>{\n    this.setState({newFruit:{ ...this.state.newFruitName , ...this.state.newFruitCount}},()=>{this.setState({fruits:[...this.state.fruits,this.state.newFruit]})})\n  }\n\n\n\n\n  render() {\n    const { fruits, getCount } = this.state;\n    const filterFruits = fruits.filter((fruit) =>\n      fruit.name.includes(getCount)\n    );\n\n    return (\n      <div className=\"maxContainer\">\n        <ViewFruits fruits={this.state.fruits} />\n        <GetCount countSearch={this.countSearch} searchFruit={filterFruits} />\n        <AddNewFruit\n          addId={this.addFruitID}\n          addName={this.addFruitName}\n          newFruit={this.newFruit}\n          fruits={this.state.fruits}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}